# -*- shell-script -*-
# Vagrant
if type vagrant &>/dev/null; then
  export VAGRANT_DEFAULT_PROVIDER="vmware_desktop"
fi

# XCode funkiness
# if command -v xcrun >/dev/null 2>&1; then
#   export CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"
# fi

# Homebrew
if type brew &>/dev/null; then
  export HOMEBREW_NO_ANALYTICS=1
  export HOMEBREW_INSTALL_CLEANUP=1
  export HOMEBREW_NO_ENV_HINTS=1

  BREWROOT="$(brew --prefix)"
  FPATH="$$BREWROOT/share/zsh/site-functions:$FPATH"
  export PATH="$BREWROOT/sbin:$PATH"
  export LDFLAGS="-L$BREWROOT/lib -L$BREWROOT/opt/openssl/lib -L$BREWROOT/opt/zlib/lib"
  export CPPFLAGS="-I$BREWROOT/include -I$BREWROOT/opt/openssl/include -I$BREWROOT/opt/zlib/include"
  export PKG_CONFIG_PATH="$BREWROOT/lib/pkgconfig:$BREWROOT/opt/openssl/lib/pkgconfig:$BREWROOT/opt/zlib/lib/pkgconfig"
  alias bu="brew update && brew upgrade"
fi

if type xcrun &>/dev/null; then
  export SDKROOT=$(xcrun --show-sdk-path)
fi

# Use `say` to have the computer say done/error when a command completes
notify_internal () {
  command=$1
  res=$2

  # osascript -e 'display notification "'$res': '$command'" with title "Command '$res'"'
  say $res
}

alias a='f() { {eval "$@" && notify_internal "$*" Done} || notify_internal "$*" Error};f'
